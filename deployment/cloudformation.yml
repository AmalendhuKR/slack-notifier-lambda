AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploys a Lambda function with API Gateway to send messages to Slack."

Parameters:
  SlackWebhookUrl:
    Type: String
    Description: "The Slack webhook URL for sending messages."

  S3BucketName:
    Type: String
    Description: "S3 bucket containing the Lambda deployment package."

  S3Key:
    Type: String
    Description: "The key (path) to the Lambda ZIP file inside the S3 bucket."

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaSlackNotifierRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"
        - PolicyName: APIGatewayInvokePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - execute-api:Invoke
                Resource: "*"

  SlackNotifierLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SlackNotifierFunction
      Runtime: python3.13
      Handler: app.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: !Ref S3Key
      Timeout: 10
      MemorySize: 128
      Environment:
        Variables:
          SLACK_WEBHOOK_URL: !Ref SlackWebhookUrl

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: SlackNotifierAPI

  ApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGateway
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: "notify"

  ApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !Ref ApiResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations"
          - LambdaFunctionArn: !GetAtt SlackNotifierLambda.Arn

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SlackNotifierLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiMethod
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: prod

Outputs:
  ApiEndpoint:
    Description: "Invoke URL for API Gateway"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/notify"
